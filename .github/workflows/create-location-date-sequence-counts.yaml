# This workflow is designed to run shortly after the hub's weekly submission
# deadline. It generates an unscored-location-dates file as well as time
# series and oracle output target data.
name: Run post-submission jobs

on:
  schedule:
    # Not precise, but GithHub actions don't support time zones
    - cron: "20 01 * 11-12,1-3 4" # 1:20 AM UTC every Thurs (Nov-Dec, Jan-Mar)
    - cron: "20 00 * 4-10 4" # 12:20 AM UTC every Thurs (Apr-Oct)
  workflow_dispatch:
    inputs:
      nowcast_date:
        description: "Nowcast date (YYYY-MM-DD)"
        required: false

permissions:
    contents: write
    pull-requests: write

jobs:

  # Create target data for the round that closed 90 days ago.
  # This step will exit if there is no round with a nowcast
  # date 90 days ago.
  create-target-data:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v4
        with:
            # only checkout what we need
            sparse-checkout: |
              .github/
              auxiliary-data/
              hub-config/
              target-data/
              src/

      - name: Install uv 🐍
        uses: astral-sh/setup-uv@v5
        with:
          version: ">=0.0.1"

      - name: Get nowcast date (aka round_id) 🕰️
        # if nowcast_date is not provided, use the most recent Wednesday
        run: |
          source ${GITHUB_WORKSPACE}/.github/shared/shared-functions.sh
          if [ -z "${{ inputs.nowcast_date }}" ]; then
            NOWCAST_DATE=$(get_latest_wednesday)
          else
            NOWCAST_DATE=${{ inputs.nowcast_date }}
          fi
          echo "NOWCAST_DATE=$NOWCAST_DATE" >> $GITHUB_ENV
          echo "Getting nowcast date for most recent round: $NOWCAST_DATE"

      #uv run get_target_data.py --nowcast-date=$NOWCAST_DATE
      - name: Create target data 🎯
        run: |
          mkdir -p target-data
          echo "This is a test" > target-data/testy.txt

      - name: Create PR for new target data
        uses: ./.github/actions/create-pr
        with:
          pr-prefix: "${{ env.NOWCAST_DATE }}_target_data"
          file-path: target-data/
          commit-message: "Add target data for round $NOWCAST_DATE"
          pr-body: "Created via GitHub Actions: generate target data for round $NOWCAST_DATE"


  create-location-date-sequence-counts:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v4
        with:
            # don't check out repo folders with large amounts of data
            # (e.g., model-output, target-data)
            sparse-checkout: |
              auxiliary-data/
              hub-config/
              src/

      - name: Install uv 🐍
        uses: astral-sh/setup-uv@v5
        with:
          version: ">=0.0.1"

      - name: Test step
        run: |
          PR_DATETIME=$(date +'%Y-%m-%d_%H-%M-%S')
          echo "PR_DATETIME=$PR_DATETIME" >> $GITHUB_ENV
          echo "PR_DATETIME=$PR_DATETIME"

      # - name: Create file of sequence counts by location and date 🦠
      #   run: |
      #     uv run get_location_date_counts.py
      #   working-directory: src

      # - name: Get current date and time 🕰️
      #   run: |
      #     PR_DATETIME=$(date +'%Y-%m-%d_%H-%M-%S')
      #     echo "PR_DATETIME=$PR_DATETIME" >> $GITHUB_ENV

      # - name: Create PR for sequence counts 🚀
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   run: |
      #     git config user.name "github-actions[bot]"
      #     git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
      #     git checkout -b new_location_date_sequence_counts_"$PR_DATETIME"
      #     git add auxiliary-data/unscored-location-dates/
      #     git commit -m "Add sequence counts by location & date $PR_DATETIME"
      #     git push -u origin new_location_date_sequence_counts_"$PR_DATETIME"
      #     gh pr create \
      #       --base main \
      #       --title "Add new sequence counts by location and date $PR_DATETIME" \
      #       --body "Created via GitHub Actions: generate count of sequences collected by date/location for the past 31 days."
